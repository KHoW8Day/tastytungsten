<!--
Copyright Â© (C) 2012 Emory Hughes Merryman, III

This file is part of tastytungsten.

tastytungsten is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
//
tastytungsten is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<project name="tastytungsten" xmlns:ivy="antlib:org.apache.ivy.ant">

  <path id="cobertura.classpath">
    <pathelement path="lib/cobertura-1.9.4.1.jar"/>
    <pathelement path="lib/asm-3.0.jar"/>
    <pathelement path="lib/asm-tree-3.0.jar"/>
  </path>
  <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

  <taskdef resource="checkstyletask.properties" classpath="/usr/share/java/checkstyle.jar"/>
  <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="/usr/share/java/ivy-2.3.0-rc1.jar"/>
  <target name="init">
    <ivy:resolve file="src/ivy.xml"/>
    <ivy:retrieve/>
  </target>
  <target name="clean">
    <delete dir="build"/>
    <delete dir="dist"/>
    <delete dir="lib"/>
  </target>
  <target name="precompile" depends="init">
    <mkdir dir="build/precompile"/>
    <javac destdir="build/precompile" debug="yes" debuglevel="lines,vars,source" target="1.6">
      <src path="src/processor"/>
      <src path="src/uncovered"/>
      <src path="src/bootstrap"/>
      <compilerarg line="-Xlint"/>
    </javac>
  </target>
  <target name="bootstrap" depends="precompile">
    <mkdir dir="build/bootstrap/instrumented/src"/>
    <mkdir dir="build/bootstrap/instrumented/classes"/>
    <mkdir dir="build/bootstrap/uninstrumented/src"/>
    <mkdir dir="build/bootstrap/uninstrumented/classes"/>
    <javac destdir="build/bootstrap/uninstrumented/classes" debug="yes" debuglevel="lines,vars,source" target="1.6">
      <src path="src/junit"/>
      <classpath>
	<pathelement path="lib/junit-4.10.jar"/>
	<pathelement path="lib/mockito-all-1.9.0.jar"/>
      </classpath>
      <compilerarg line="-processorpath build/precompile"/>
      <compilerarg line="-processor tastytungsten.BootstrapProcessor"/>
      <compilerarg line="-s build/bootstrap/uninstrumented/src"/>
      <compilerarg line="-Xlint"/>
    </javac>
    <javac destdir="build/bootstrap/instrumented/classes" debug="yes" debuglevel="lines,vars,source" target="1.6">
      <src path="src/processor"/>
      <classpath>
	<pathelement path="lib/junit-4.10.jar"/>
	<pathelement path="lib/mockito-all-1.9.0.jar"/>
      </classpath>
      <compilerarg line="-processorpath build/precompile"/>
      <compilerarg line="-processor tastytungsten.BootstrapProcessor"/>
      <compilerarg line="-s build/bootstrap/instrumented/src"/>
      <compilerarg line="-Xlint"/>
    </javac>
  </target>
  <target name="junit" depends="bootstrap">
    <mkdir dir="build/junit/classes"/>
    <mkdir dir="build/junit/cobertura"/>
    <cobertura-instrument datafile="build/junit/cobertura.ser" todir="build/junit/classes">
      <classpath>
	<pathelement path="lib/asm-3.0.jar"/>
	<pathelement path="lib/asm-tree-3.0.jar"/>
	<pathelement path="lib/log4j-1.2.9.jar"/>
	<fileset dir="lib"/>
      </classpath>
      <fileset dir="build/bootstrap/instrumented/classes"/>
    </cobertura-instrument>
    <junit printsummary="on" jvm="/usr/lib/jvm/jre-1.6.0-openjdk.x86_64/bin/java" fork="on" forkMode="once" haltonerror="on" haltonfailure="on">
      <formatter type="xml"/>
      <jvmarg value="-Djava.util.logging.config.file=src/logging-junit.properties"/>
      <sysproperty key="net.sourceforge.cobertura.datafile" file="build/junit/cobertura.ser" />
      <classpath>
	<pathelement path="lib/junit-4.10.jar" />
	<pathelement path="lib/mockito-all-1.9.0.jar"/>
	<pathelement path="lib/cobertura-1.9.4.1.jar"/>
	<pathelement path="lib/asm-3.0.jar"/>
	<pathelement path="lib/asm-tree-3.0.jar"/>
	<pathelement path="lib/log4j-1.2.9.jar"/>
	<pathelement path="build/junit/classes" />
	<pathelement path="build/bootstrap/uninstrumented/classes" />
      </classpath>
      <batchtest fork="yes" todir="build/junit">
	<fileset dir="build/junit/classes">
	  <include name="tastytungsten/StandardTests.class"/>
	</fileset>
      </batchtest>
    </junit>
    <cobertura-report datafile="build/junit/cobertura.ser" destdir="build/junit/cobertura" srcdir="src/processor">
      <classpath>
	<pathelement path="lib/cobertura-1.9.4.1.jar"/>
	<pathelement path="lib/asm-3.0.jar"/>
	<pathelement path="lib/asm-tree-3.0.jar"/>
	<pathelement path="lib/log4j-1.2.9.jar"/>
	<pathelement path="lib/oro-2.0.8.jar"/>
      </classpath>
    </cobertura-report>
    <cobertura-check branchrate="100" datafile="build/junit/cobertura.ser" haltonfailure="true" linerate="100" packagebranchrate="100" packagelinerate="100" totalbranchrate="100" totallinerate="100">
      <classpath>
	<pathelement path="lib/cobertura-1.9.4.1.jar"/>
	<pathelement path="lib/asm-3.0.jar"/>
	<pathelement path="lib/asm-tree-3.0.jar"/>
	<pathelement path="lib/log4j-1.2.9.jar"/>
	<pathelement path="lib/oro-2.0.8.jar"/>
      </classpath>
    </cobertura-check>
  </target>
  <target name="checkstyle" depends="junit">
    <mkdir dir="build/checkstyle/bootstrap"/>
    <copy todir="build/checkstyle/bootstrap">
      <fileset dir="src/bootstrap"/>
    </copy>
    <copy file="src/package-info.java" todir="build/checkstyle/bootstrap/tastytungsten"/>
    <checkstyle config="src/loose-checks.xml">
      <fileset dir="build/checkstyle/bootstrap"/>
      <property key="cyclomaticcomplexity" value="10"/>
    </checkstyle>
    <mkdir dir="build/checkstyle/precompile"/>
    <copy todir="build/checkstyle/precompile">
      <fileset dir="src/junit"/>
    </copy>
    <copy file="src/package-info.java" todir="build/checkstyle/precompile/tastytungsten"/>
    <checkstyle config="src/loose-checks.xml">
      <fileset dir="build/checkstyle/precompile"/>
      <property key="cyclomaticcomplexity" value="1"/>
    </checkstyle>
    <mkdir dir="build/checkstyle/junit"/>
    <copy todir="build/checkstyle/junit">
      <fileset dir="src/junit"/>
    </copy>
    <copy file="src/package-info.java" todir="build/checkstyle/junit/tastytungsten"/>
    <checkstyle config="src/loose-checks.xml">
      <fileset dir="build/checkstyle/junit"/>
      <property key="cyclomaticcomplexity" value="1"/>
    </checkstyle>
    <mkdir dir="build/checkstyle/processor"/>
    <copy todir="build/checkstyle/processor">
      <fileset dir="src/processor"/>
    </copy>
    <copy file="src/package-info.java" todir="build/checkstyle/processor/tastytungsten"/>
    <checkstyle config="src/checks.xml">
      <fileset dir="build/checkstyle/processor"/>
      <property key="cyclomaticcomplexity" value="2"/>
    </checkstyle>
  </target>
  <target name="javadocs" depends="init">
    <mkdir dir="build/javadocs/junit"/>
    <mkdir dir="build/javadocs/mockito"/>
    <unzip src="lib/junit-4.10-javadoc.jar" dest="build/javadocs/junit"/>
    <unzip src="lib/mockito-all-1.9.0-javadoc.jar" dest="build/javadocs/mockito"/>
  </target>
  <target name="print" depends="bootstrap">
    <mkdir dir="dist/docs"/>
    <exec executable="src/a2ps.sh"/>
  </target>
  <target name="javadoc" depends="checkstyle">
    <mkdir dir="dist/docs/javadoc"/>
    <javadoc destdir="dist/docs/javadoc" packagenames="tastytungsten" Private="yes" linksource="yes">
      <fileset dir="src/bootstrap"/>
      <fileset dir="src/precompile"/>
      <fileset dir="src/processor"/>
      <fileset dir="build/bootstrap/src"/>
      <link href="http://docs.oracle.com/javase/7/docs/api/"/>
    </javadoc>
  </target>
</project>